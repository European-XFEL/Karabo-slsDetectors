before_script:
    - echo '*** Install packages needed by slsDetectorsPackage ***'
    - export REL_OS_NAME=$(lsb_release -is)
    - >
      if [ "$REL_OS_NAME" = "CentOS" ]; then
        if [ -x "/opt/rh/devtoolset-7/enable" ]; then
            source /opt/rh/devtoolset-7/enable
        fi
        yum install -y zeromq-devel
      elif [ "$REL_OS_NAME" = "Ubuntu" ]; then
        apt-get update
        apt-get install -y libzmq3-dev
      fi

stages:
  - lint
  - build

.release_build_template: &release_build
  stage: build
  script:
    - export REL_OS_NAME=$(lsb_release -is)
    - export REL_OS_VERS=$(lsb_release -rs | sed -r "s/^([0-9]+).*/\1/")
    - export REL_ARCH=$(uname -m)
    - export REL_PROJECT_NAME=$CI_PROJECT_NAME
    - export REL_TAG=$CI_COMMIT_REF_NAME
    - export REL_ARTIFACT_DEST=karaboDevices/$REL_PROJECT_NAME/tags/$CI_COMMIT_REF_NAME
    - export KARABO_TAG=$(echo $REL_TAG | sed -r "s/^([0-9]+.[0-9]+.[0-9]+)-([0-9]+.[0-9]+.[0-9]+)/\2/")
    - export REL_ARTIFACT_NAME=$REL_PROJECT_NAME-$REL_TAG-$KARABO_TAG-$REL_OS_NAME-$REL_OS_VERS-$REL_ARCH-Release.sh
    - curl http://exflserv05.desy.de/karabo/karaboFramework/tags/$KARABO_TAG/karabo-$KARABO_TAG-Release-$REL_OS_NAME-$REL_OS_VERS-x86_64.sh > karabo.sh
    - bash karabo.sh --prefix=/root
    - source /root/karabo/activate
    - pushd $CI_PROJECT_DIR
    - karabo -g https://$XFEL_TOKEN@git.xfel.eu install $REL_PROJECT_NAME $REL_TAG
    - make -j CONF=Release package
    - echo package/$REL_ARTIFACT_NAME
    - mv package/*sh $REL_ARTIFACT_NAME
    - echo $REL_ARTIFACT_DEST
    - sshpass -p "$XKARABO_PWD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null xkarabo@exflserv05 "mkdir -p /var/www/html/karabo/$REL_ARTIFACT_DEST"
    - sshpass -p "$XKARABO_PWD" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $REL_ARTIFACT_NAME xkarabo@exflserv05:/var/www/html/karabo/$REL_ARTIFACT_DEST
  only:
    - /^(\d+\.)(\d+\.)(\d+)-(\d+\.)(\d+\.)(\d+)((a|b|rc)\d+)?$/
  except:
    - branches 

.test_build_template: &test_build
  stage: build
  script:
    - export REL_OS_NAME=$(lsb_release -is)
    - export REL_OS_VERS_LONG=$(lsb_release -rs | sed -r "s/^([0-9]+).*/\1/")
    - export KARABO_BROKER_TOPIC="gitlab_ci_$CI_JOB_ID"
    - export REL_PROJECT_NAME=$CI_PROJECT_NAME
    - export REL_TAG=$CI_BUILD_REF_NAME
    - export KARABO_TAG="latest_build"
    - curl http://exflserv05.desy.de/karabo/karaboFramework/tags/$KARABO_TAG/karabo-$KARABO_TAG-Release-$REL_OS_NAME-$REL_OS_VERS_LONG-x86_64.sh > karabo.sh
    - bash karabo.sh --prefix=/root
    - source /root/karabo/activate
    - pushd $CI_PROJECT_DIR
    - karabo -g https://$XFEL_TOKEN@git.xfel.eu install $REL_PROJECT_NAME $REL_TAG
    - make -j build CONF=Release
    - make -j test CONF=Release
  only:
    - branches
  except:
    - master

##### Static source code analysis #####
lint:
  stage: lint
  image: europeanxfel/karabo-ci:miniconda-3lint
  script:
    - git clone https://$XFEL_TOKEN@git.xfel.eu/Karabo/linter-tools.git ci
    - source ci/lint-cppcheck.sh

##### Static source code analysis #####
lint-clang-tidy:
  stage: lint
  image: europeanxfel/karabo-ci:miniconda-3lint
  script:
    - git clone https://$XFEL_TOKEN@git.xfel.eu/Karabo/linter-tools.git ci
    - source ci/lint-clang-tidy.sh

##### Release build #####
    
release:ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *release_build

release:ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *release_build
    
release:centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *release_build

##### Test build #####

test:ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *test_build

test:ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *test_build

test:centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *test_build
